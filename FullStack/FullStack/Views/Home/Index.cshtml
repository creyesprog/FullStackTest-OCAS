@{
    ViewData["Title"] = "Activity Sign Up";
}
@model FullStack.Infrastructure.Models.ViewModels.SubmissionViewModel
<section class="section-form">
    <div class="container form-container flex-center text-center">
        <h1 class="display-4">> Activity Submission</h1>
        <form id="form-activity" action="api/Submission/Post" method="post">
            <div class="row">
                <div class="col-12 col-md-6 col-lg-6">
                    <div class="form-group">
                        <label asp-for="@Model.FirstName"></label>
                        <input class="form-control" asp-for="@Model.FirstName" />
                    </div>
                </div>
                <div class="col-12 col-md-6 col-lg-6">
                    <div class="form-group">
                        <label asp-for="@Model.LastName"></label>
                        <input class="form-control" asp-for="@Model.LastName" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="form-group">
                        <label asp-for="@Model.Email"></label>
                        <input class="form-control" asp-for="@Model.Email" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="form-group">
                        <label asp-for="@Model.ActivityId"></label>
                        <select class="form-control" asp-for="@Model.ActivityId" asp-items="@Model.submissionActivities">
                        </select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="form-group">
                        <label asp-for="@Model.Comments"></label>
                        <textarea class="form-control" asp-for="@Model.Comments"></textarea>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-9">
                    <div asp-validation-summary="All"></div>
                </div>
                <div class="col-3">
                    <button data-target="#submission-modal" type="submit" class="btn btn-primary">SUBMIT</button>
                </div>
            </div>
        </form>
    </div>
    @{
        await Html.RenderPartialAsync("_ModalView", new FullStack.Infrastructure.Models.PartialModels.ModalViewModel()
        {
            Title = "Confirmation",
            Content = "Are you sure?",
            DataTarget = "submission-modal",
        });
    }
</section>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script>
        $(function () {

            // Handle form submission
            $("#form-activity").submit(function (e) {
                e.preventDefault();

                let $form = $("#form-activity");

                if ($form.valid()) {
                    // Going to manually remove errors for now. Probably a better way of doing this
                    $(".validation-summary-errors").children().remove();
                    $("#submission-modal").modal('show');
                }
            });

            // Handle modal click
            $("#btn-modal-submit").click(function () {
                let $form = $("#form-activity");

                let $modalBody = $("#submission-modal").find(".modal-body").text("...processing...");
                $modalBody.text("...processing...");

                let jsonObj = {
                    Email: $form.find("#Email").val(),
                    FirstName: $form.find("#FirstName").val(),
                    LastName: $form.find("#LastName").val(),
                    Comments: $form.find("#Comments").val(),
                    ActivityId: $form.find("#ActivityId").val()
                };

                $.ajax({
                    method: "POST",
                    url: $form.attr("action"),
                    data: JSON.stringify(jsonObj),
                    dataType: "json",
                    contentType: "application/json"
                }).done(function (data) {
                    // TODO: Should be passing object that contains errors. Need to do this in backend
                    $modalBody.html("Success! <a href='/Home/Submissions'>Click the following to see list of submissions.</a>");
                }).fail(function (data) {
                    $modalBody.text("Sorry, we're experiencing some technical difficuly - please try again later! :)");
                });
            });
        });
    </script>
}